{% extends 'base.html.twig' %}

{% block title %}Citation du Jour{% endblock %}

{% block body %}
    <div class="container d-flex flex-column align-items-center justify-content-center vh-100">
        <div class="card shadow-lg p-4 text-center citation-card">
            <h2 class="mb-4 text-primary">📖 Citation du Jour</h2>

            <blockquote class="blockquote">
                <p id="citation-text" class="mb-3 text-dark fs-4 fst-italic">"{{ citation.getText() }}"</p>
            </blockquote>

            <footer class="blockquote-footer">
                <span id="citation-author" class="fw-bold">{{ citation.getAuthor().getName() }}</span>
                <br>
                <span id="citation-book" class="text-muted">📚 {{ citation.getBook().getTitle() }}</span>
            </footer>

            <div class="mt-4">
                <button id="reload-citation" class="btn btn-primary">
                    <span id="reload-spinner" class="spinner-border spinner-border-sm text-light d-none"></span>
                    🔄 Nouvelle citation
                </button>
            </div>

            {% if app.user %}
                <div class="mt-4">
                    <button id="explain-btn" class="btn btn-info">
                        <span id="explain-spinner" class="spinner-border spinner-border-sm text-light d-none"></span>
                        💡 Expliquer par l'IA
                    </button>
                </div>
            {% endif %}
        </div>

        {% if app.user %}
            <div id="explanation-container" class="mt-4 p-3 w-75 text-center border rounded bg-light d-none">
                <p id="explanation-text" class="text-dark mt-3"></p>
            </div>
        {% endif %}

        <div class="mt-4">
            {% if app.user %}
                <a href="{{ path('app_logout') }}" class="btn btn-danger">🚪 Se déconnecter</a>
            {% else %}
                <a href="{{ path('app_login') }}" class="btn btn-outline-primary me-2">🔑 Se connecter</a>
                <a href="{{ path('app_register') }}" class="btn btn-outline-success">📝 Créer un compte</a>
            {% endif %}
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const explainBtn = document.getElementById("explain-btn");
            const reloadBtn = document.getElementById("reload-citation");
            const explanationContainer = document.getElementById("explanation-container");
            const explanationText = document.getElementById("explanation-text");
            const reloadSpinner = document.getElementById("reload-spinner");
            const explainSpinner = document.getElementById("explain-spinner");

            // Fonction pour charger une nouvelle citation via AJAX
            function loadNewCitation() {
                reloadSpinner.classList.remove("d-none");  // Afficher le spinner de chargement
                fetch("{{ path('random_citation') }}", {
                    method: "GET",
                    headers: {
                        "X-Requested-With": "XMLHttpRequest"
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        // Mettre à jour le texte de la citation avec la nouvelle citation
                        document.getElementById("citation-text").innerText = data.text;
                        document.getElementById("citation-author").innerText = data.author;
                        document.getElementById("citation-book").innerText = data.book;
                    })
                    .catch(error => {
                        console.error('Erreur lors du rechargement de la citation:', error);
                    })
                    .finally(() => {
                        reloadSpinner.classList.add("d-none");  // Cacher le spinner une fois le chargement terminé
                    });
            }

            // Clic sur le bouton "Nouvelle citation"
            if (reloadBtn) {
                reloadBtn.addEventListener("click", function () {
                    loadNewCitation();
                });
            }

            // Bouton "Expliquer par l'IA"
            if (explainBtn) {
                explainBtn.addEventListener("click", function () {
                    explanationContainer.classList.remove("d-none");
                    explanationText.innerHTML = "";
                    explainSpinner.classList.remove("d-none"); // Afficher le spinner d'explication

                    fetch("{{ path('explain_citation') }}", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "X-Requested-With": "XMLHttpRequest"
                        },
                        body: JSON.stringify({
                            citation: "{{ citation.getText() }}",
                            author: "{{ citation.getAuthor().getName() }}",
                            book: "{{ citation.getBook().getTitle() }}"
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            explainSpinner.classList.add("d-none");  // Cacher le spinner une fois l'explication reçue
                            explanationText.innerHTML = data.explanation;
                        })
                        .catch(error => {
                            explainSpinner.classList.add("d-none");
                            explanationText.innerHTML = "❌ Une erreur est survenue.";
                        });
                });
            }
        });
    </script>
{% endblock %}
